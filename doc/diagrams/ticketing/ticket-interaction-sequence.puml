@startuml Ticket Interaction Sequence Diagram
!theme plain
skinparam ParticipantPadding 20
skinparam BoxPadding 10

' Double the font size with skinparam settings
skinparam defaultFontSize 28
skinparam actorFontSize 32
skinparam participantFontSize 28
skinparam arrowFontSize 26
skinparam noteFontSize 24
skinparam boxFontSize 30
skinparam sequenceGroupFontSize 28
skinparam sequenceDividerFontSize 28
skinparam sequenceReferenceFontSize 28
skinparam sequenceBoxFontSize 28

actor "User" as User
participant "Chatbot OpenAI" as Bot
participant "AI Handler" as AIHandler
participant "Ticketing System" as TicketSystem
actor "Administrator" as Admin
database "Database" as DB

box "Phase 1: Detection & Creation" #LightBlue
  User -> Bot: Sends complex request
  Bot -> AIHandler: Analyzes message
  AIHandler --> Bot: Suggests ticket creation
  Bot --> User: Asks for confirmation
  User -> Bot: Confirms ticket creation
  
  Bot -> TicketSystem: executeTool("openTicket", args)
  TicketSystem -> DB: sendMessageToAdmin()
  TicketSystem -> Admin: Sends notification
  Bot --> User: Confirms ticket opened
  deactivate Bot
end box

box "Phase 2: Management & Response" #LightYellow
  Admin -> TicketSystem: Views ticket details
  
  loop until resolution
    Admin -> TicketSystem: sendAdminReplyToUser() or ADMIN_API.ADMIN_REPLY_TICKET
    TicketSystem -> DB: createAdminMessage()
    TicketSystem -> User: Delivers admin's answer
    
    User -> TicketSystem: Replies with additional information
    TicketSystem -> DB: storeUserMessage()
    TicketSystem -> Admin: Forwards user's response
  end
  
  Admin -> TicketSystem: closeTicket()
end box

box "Phase 3: Resolution & Closure" #LightGreen
  TicketSystem -> DB: updateTicketStatus("closed")
  TicketSystem -> User: Confirms ticket closed
  TicketSystem -> Admin: Notifies ticket closure
end box

@enduml

